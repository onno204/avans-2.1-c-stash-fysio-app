#pragma checksum "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bab0bfc37bdb602e8c8fd86a8ad11e44cffed997"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Manage_Agenda_Add), @"mvc.1.0.view", @"/Views/Shared/Manage/Agenda/Add.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\_ViewImports.cshtml"
using FysioWebapp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\_ViewImports.cshtml"
using FysioWebapp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bab0bfc37bdb602e8c8fd86a8ad11e44cffed997", @"/Views/Shared/Manage/Agenda/Add.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e933f14ea119bc4a5b8c26015092db9c27b754f8", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Manage_Agenda_Add : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<UserViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "Manage", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Agenda", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Add", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("submitToController"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
  
    ViewData["Title"] = "Plannen";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<style>\r\n    .btn-margin {\r\n        margin-left: .2rem;\r\n    }\r\n\r\n    .div-margin {\r\n        margin-top: 2rem;\r\n    }\r\n\r\n    .busy-text {\r\n        margin-left: 1.4rem;\r\n    }\r\n</style>\r\n\r\n<div class=\"row\" style=\"margin-top: 4rem;\">\r\n");
#nullable restore
#line 21 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
     foreach (var item in ViewContext.ViewData.ModelState)
    {
        if (item.Value.Errors.Any())
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h1 style=\"color: red\">");
#nullable restore
#line 25 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
                               Write(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h1>\r\n");
#nullable restore
#line 26 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
        }
    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <div class=""therapistSelectorContainer"">

    </div>

    <div class=""dateSelectorContainer mt-3"">
        <h6>Selecteer dag</h6>
        <input type=""date"" id=""start"" name=""trip-start"" class=""form-control dateSelector""
               onchange=""dateSelectorChange(this)""");
            BeginWriteAttribute("value", "\r\n               value=\"", 830, "\"", 890, 1);
#nullable restore
#line 36 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
WriteAttributeValue("", 854, DateTime.Now.ToString("yyyy-MM-dd"), 854, 36, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("min", "\r\n               min=\"", 891, "\"", 949, 1);
#nullable restore
#line 37 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
WriteAttributeValue("", 913, DateTime.Now.ToString("yyyy-MM-dd"), 913, 36, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">
        <div class=""daySelectorContainer"">

        </div>
    </div>


    <div class=""timeSelectorContainer"">
        <div class=""startTimeSelectorContainer mt-3"">

        </div>
        <div class=""endTimeSelectorContainer mt-3"">

        </div>
        <div class=""durationContainer mt-3"">

        </div>

        <input type=""button"" class=""btn"" value=""Save appointment"" onclick=""saveAppointment()"" />
    </div>
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bab0bfc37bdb602e8c8fd86a8ad11e44cffed9977827", async() => {
                WriteLiteral("\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Area = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</div>

<script>
    const therapistData = {};
    function addTherapistData(email, day, startTime, endTime) {
        if (therapistData[email] === undefined) {
            therapistData[email] = {};
        }
        if (therapistData[email][day] === undefined) {
            therapistData[email][day] = [];
        }
        therapistData[email][day].push({
            startTime: startTime,
            endTime: endTime
        });
    }

    function dateSelectorChange(target) {
        const date = new Date(target.value);
        const week = new Array(""Sunday"", ""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"");
        const day = week[date.getDay()];
        $("".daySelector"").val(day).change();
    }

    function ListToSelect(inputList, extraData) {
        var selectString = `<select ${extraData}>`;
        inputList.forEach((arrayValue, i) => {
            selectString += `<option value=""${arrayValue}"">${arrayValue}</option>`
        });
        selectStr");
            WriteLiteral(@"ing += ""</select>"";
        return selectString;
    };

    function setTherapistSelector() {
        const selectDay = ListToSelect(Object.keys(therapistData), `class=""therapistSelector form-control"" onchange=""showTherapist($(this).val())""`);
        $("".therapistSelectorContainer"").html(`<h6>Selecteer therapeut</h6>${selectDay}`);
        showTherapist(Object.keys(therapistData)[0]);
    }

    function getTimesBetween(startTime, endTime) {
        let selectString = """";
        for (let hr = startTime; hr < endTime; hr += 0.5) {
            let isHalfHour = hr !== parseInt(hr);
            const hrStr = parseInt(hr).toString().padStart(2, ""0"") + "":"";
            selectString += `<option value=""${hr}"">${hrStr}${isHalfHour ? ""30"" : ""00""}</option>`;
        }
        return selectString;
    }

    function showTherapist(email) {
        const selectDay = ListToSelect(Object.keys(therapistData[email]), `class=""daySelector form-control"" disabled onchange=""showStartHours('${email}', $(this");
            WriteLiteral(@").val())""`);
        $("".daySelectorContainer"").html(`${selectDay}`);
        $("".dateSelector"").change();
        //showStartHours(email, Object.keys(therapistData[email])[0]);
    }

    function showStartHours(email, day) {
        const timings = therapistData[email][day];
        if (timings === undefined) {
            $("".startTimeSelectorContainer"").html(""<h1>Er zijn geen tijdssloten beschikbaar voor deze dag!</h1>"");
            $("".endTimeSelectorContainer"").html("""");
            $("".durationContainer"").html("""");
            return;
        }
        let selectString = `<select class=""startTimeSelector form-control"" onchange=""showEndHours('${email}', '${day}', $(this).val())"">`;
        timings.forEach(elmt => {
            selectString += getTimesBetween(elmt.startTime, elmt.endTime - 0.5);
        })
        selectString += ""</select>"";
        $("".startTimeSelectorContainer"").html(`<h6>Start tijd</h6>${selectString}`);
        showEndHours(email, day, timings[0].startTime)
  ");
            WriteLiteral(@"  }

    function showEndHours(email, day, startTime) {
        startTime = parseFloat(startTime);
        const timings = therapistData[email][day];
        let selectString = `<select class=""endTimeSelector form-control"" onchange=""calculateTime('${email}', '${day}', '${startTime}', $(this).val())"">`;
        let foundStartTime = false;
        timings.forEach(elmt => {
            if (startTime < elmt.endTime && startTime >= elmt.startTime && foundStartTime === false) {
                foundStartTime = true;
                selectString += getTimesBetween(startTime + 0.5, elmt.endTime + 0.5);
            }
        })
        selectString += ""</select>"";
        $("".endTimeSelectorContainer"").html(`<h6>Eind tijd</h6>${selectString}`);
        $("".endTimeSelector"").change()
    }

    function calculateTime(email, day, startTime, endTime) {
        const totalDuration = endTime - startTime;
        $("".durationContainer"").html(`<h5>Totale duur: ${totalDuration} uur</h5>`);
    }

    fu");
            WriteLiteral(@"nction saveAppointment() {
        const therapistEmail = $("".therapistSelector"").val();
        const startTime = parseFloat($("".startTimeSelector"").val());
        const endTime = parseFloat($("".endTimeSelector"").val());

        const startDate = new Date($("".dateSelector"").val());
        startDate.setHours(parseInt(startTime));
        startDate.setMinutes(60 * (startTime - parseInt(startTime)))

        const endDate = new Date($("".dateSelector"").val());
        endDate.setHours(parseInt(endTime));
        endDate.setMinutes(60 * (endTime - parseInt(endTime)));

        $("".submitToController"").append(`<input type=""hidden"" name=""StartDate"" value=""${startDate.toISOString()}"" />`);
        $("".submitToController"").append(`<input type=""hidden"" name=""EndDate"" value=""${endDate.toISOString()}"" />`);
        $("".submitToController"").append(`<input type=""hidden"" name=""UserEmail"" value=""${therapistEmail}"" />`);
        $("".submitToController"").submit();
    }

    setTimeout(() => {
        s");
            WriteLiteral("etTherapistSelector();\r\n    }, 300);\r\n</script>\r\n\r\n");
#nullable restore
#line 177 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
 foreach (UserViewModel user in @Model)
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 179 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
     foreach (AvailabilityModel availability in user.Availability)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <script>\r\n            setTimeout(() =>\r\n            {\r\n                addTherapistData(\"");
#nullable restore
#line 184 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
                             Write(user.Email);

#line default
#line hidden
#nullable disable
            WriteLiteral("\", \"");
#nullable restore
#line 184 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
                                            Write(availability.AvailabilityDay);

#line default
#line hidden
#nullable disable
            WriteLiteral("\", parseFloat(\"");
#nullable restore
#line 184 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
                                                                                        Write(availability.StartTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("\".replace(\",\", \".\")), parseFloat(\"");
#nullable restore
#line 184 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
                                                                                                                                                 Write(availability.EndTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("\".replace(\",\", \".\")));\r\n            }, 250);\r\n        </script>\r\n");
#nullable restore
#line 187 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 187 "C:\Users\onnov\Git\avans-2.1-c-stash-fysio-app\FysioWebapp\Views\Shared\Manage\Agenda\Add.cshtml"
     
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<UserViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
